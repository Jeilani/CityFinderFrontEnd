{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { setWhichDashboardPageToDashboard } from \"../../../actions\";\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from \"use-places-autocomplete\";\nimport { useDispatch } from \"react-redux\";\nimport \"../../../CSS/SearchSidebar.css\";\nimport categories from \"../../../categories\";\n\nconst SearchSidebar = ({\n  whichCategory,\n  searchCategoriesNearby,\n  panTo\n}) => {\n  _s();\n\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => 39.7392,\n        lng: () => 104.9903\n      },\n      radius: 200 * 1000\n    }\n  });\n\n  const handleChosenSuggestion = async suggestion => {\n    setValue(suggestion, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        suggestion\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  const suggestions = () => {\n    if (status === \"OK\") {\n      return data.map(each => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleChosenSuggestion(each.description),\n          className: \"suggestionsResultsContainer\",\n          children: each.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n  const categoriesList = categories.map(({\n    name,\n    iconClassNames\n  }) => {\n    let isCategory = name === whichCategory;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `${isCategory ? 'clickedCategory' : 'notClickedCategory'}`,\n      onClick: () => {\n        searchCategoriesNearby(name);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${iconClassNames}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 139\n      }, this), name]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchSideBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"returnButton\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          dispatch(setWhichDashboardPageToDashboard());\n        },\n        className: \"fas fa-3x fa-arrow-circle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(Combobox, {\n        onSelect: async address => {\n          console.log(\"address is \", address);\n          setValue(address, false);\n          clearSuggestions();\n\n          try {\n            const results = await getGeocode({\n              address\n            });\n            console.log(\"results after select is \", results);\n            const latlng = await getLatLng(results[0]);\n            const {\n              lat,\n              lng\n            } = latlng;\n            console.log(\"latlng is \", latlng);\n            props.panTo({\n              lat,\n              lng\n            });\n          } catch (error) {\n            console.log(\"error\");\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(ComboboxInput, {\n          value: value,\n          onChange: e => {\n            setValue(e.target.value);\n          },\n          disabled: !ready,\n          placeholder: \"Enter a park\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ComboboxPopover, {\n          children: /*#__PURE__*/_jsxDEV(ComboboxList, {\n            children: status === \"OK\" && data.map(({\n              id,\n              description\n            }) => {\n              return /*#__PURE__*/_jsxDEV(ComboboxOption, {\n                value: description\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categoriesContainer\",\n      children: categoriesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clickInformational\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 43\n      }, this), \"Click on an area or an apartment to ask questions to residents\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchSidebar, \"mpFG642RD0+1la5cVDZurH+fIKs=\", false, function () {\n  return [usePlacesAutocomplete, useDispatch];\n});\n\n_c = SearchSidebar;\nexport default SearchSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSidebar\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js"],"names":["React","setWhichDashboardPageToDashboard","usePlacesAutocomplete","getGeocode","getLatLng","useDispatch","categories","SearchSidebar","whichCategory","searchCategoriesNearby","panTo","ready","value","suggestions","status","data","setValue","clearSuggestions","requestOptions","location","lat","lng","radius","handleChosenSuggestion","suggestion","results","error","console","log","map","each","description","dispatch","categoriesList","name","iconClassNames","isCategory","address","latlng","props","e","target","id"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {setWhichDashboardPageToDashboard} from \"../../../actions\"\nimport usePlacesAutocomplete, {getGeocode, getLatLng} from \"use-places-autocomplete\";\nimport {useDispatch} from \"react-redux\"\nimport \"../../../CSS/SearchSidebar.css\"\nimport categories from \"../../../categories\"\n\nconst SearchSidebar = ({whichCategory, searchCategoriesNearby, panTo}) => {\n    const { ready, value, suggestions: { status, data }, setValue, clearSuggestions } = usePlacesAutocomplete({\n        requestOptions: {\n          location: {lat: () => 39.7392, lng: () => 104.9903 },\n          radius: 200 * 1000\n        }\n      });\n    const handleChosenSuggestion = async suggestion => {\n        setValue(suggestion, false)\n        clearSuggestions()\n        try {\n            const results = await getGeocode( { suggestion } )\n            const {lat, lng} = await getLatLng(results[0])\n            panTo({lat, lng})\n        } catch (error) {\n            console.log(\"error\")\n        }\n    }\n    const suggestions = () =>{\n        if (status === \"OK\"){\n            return data.map(each =>{\n                return (<div onClick={()=>handleChosenSuggestion(each.description)} className=\"suggestionsResultsContainer\">\n                    {each.description}\n                </div>)\n            })\n        }\n    }\n    const dispatch = useDispatch()\n    const categoriesList = categories.map(({name, iconClassNames})=>{\n        let isCategory = name === whichCategory\n        return (\n            <li className={`${isCategory?'clickedCategory':'notClickedCategory'}`}key={name} onClick={()=>{searchCategoriesNearby(name)}}><i className={`${iconClassNames}`}></i>{name}</li>\n        )\n    })\n\n    return (\n        <div className=\"searchSideBar\">\n        <div className=\"returnButton\"><i  onClick={()=>{dispatch(setWhichDashboardPageToDashboard())}} className=\"fas fa-3x fa-arrow-circle-left\"></i></div>\n        <div className=\"search\">\n            <Combobox\n             onSelect = {async(address) => {\n                 console.log(\"address is \", address)\n                setValue(address, false)\n                clearSuggestions()\n                try {\n                    const results = await getGeocode( { address } )\n                    console.log(\"results after select is \", results)\n                    const latlng = await getLatLng(results[0])\n                    const {lat, lng} = latlng\n                    console.log(\"latlng is \", latlng)\n                    props.panTo({lat, lng})\n                } catch (error) {\n                    console.log(\"error\")\n                }\n\n            }}>\n                <ComboboxInput\n                value={value}\n                onChange={e=>{\n                setValue(e.target.value)\n                }}\n                disabled={!ready}\n                placeholder={\"Enter a park\"}\n                />\n                <ComboboxPopover>\n                    <ComboboxList>\n                    {status === \"OK\" && data.map(({id, description})=>{\n                        return <ComboboxOption key={id} value={description}/>\n                    })}\n                    </ComboboxList>\n                </ComboboxPopover>\n            </Combobox>\n        </div>\n        <ul className=\"categoriesContainer\">\n            {categoriesList}\n        </ul>\n        <p className=\"clickInformational\"><i className=\"fas fa-info-circle\"></i>Click on an area or an apartment to ask questions to residents</p>\n      </div>\n    )\n}\n\nexport default SearchSidebar"]},"metadata":{},"sourceType":"module"}