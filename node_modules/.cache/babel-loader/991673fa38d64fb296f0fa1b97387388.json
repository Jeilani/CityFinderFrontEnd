{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { setWhichDashboardPageToDashboard } from \"../../../actions\";\nimport usePlacesAutocomplete from \"use-places-autocomplete\";\nimport { useDispatch } from \"react-redux\";\nimport \"../../../CSS/SearchSidebar.css\";\nimport categories from \"../../../categories\";\n\nconst SearchSidebar = ({\n  whichCategory,\n  searchCategoriesNearby,\n  panTo\n}) => {\n  _s();\n\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete();\n\n  const handleChosenSuggestion = async suggestion => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      panTo({\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  const suggestions = () => {\n    if (status === \"OK\") {\n      return data.map(each => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleChosenSuggestion(each.description),\n          className: \"suggestionsResultsContainer\",\n          children: each.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this);\n      });\n    }\n  };\n\n  const dispatch = useDispatch();\n  const categoriesList = categories.map(({\n    name,\n    iconClassNames\n  }) => {\n    let isCategory = name === whichCategory;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `${isCategory ? 'clickedCategory' : 'notClickedCategory'}`,\n      onClick: () => {\n        searchCategoriesNearby(name);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${iconClassNames}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 139\n      }, this), name]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchSideBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"returnButton\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          dispatch(setWhichDashboardPageToDashboard());\n        },\n        className: \"fas fa-3x fa-arrow-circle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setValue(e.target.value),\n        className: \"searchInput\",\n        type: \"input\",\n        placeholder: \"Search a city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), suggestions()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categoriesContainer\",\n      children: categoriesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clickInformational\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 43\n      }, this), \"Click on an area or an apartment to ask questions to residents\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchSidebar, \"mpFG642RD0+1la5cVDZurH+fIKs=\", false, function () {\n  return [usePlacesAutocomplete, useDispatch];\n});\n\n_c = SearchSidebar;\nexport default SearchSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSidebar\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js"],"names":["React","setWhichDashboardPageToDashboard","usePlacesAutocomplete","useDispatch","categories","SearchSidebar","whichCategory","searchCategoriesNearby","panTo","ready","value","suggestions","status","data","setValue","clearSuggestions","handleChosenSuggestion","suggestion","address","results","getGeocode","lat","lng","getLatLng","error","console","log","map","each","description","dispatch","categoriesList","name","iconClassNames","isCategory","e","target"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport {setWhichDashboardPageToDashboard} from \"../../../actions\"\nimport usePlacesAutocomplete from \"use-places-autocomplete\";\nimport {useDispatch} from \"react-redux\"\nimport \"../../../CSS/SearchSidebar.css\"\nimport categories from \"../../../categories\"\n\nconst SearchSidebar = ({whichCategory, searchCategoriesNearby, panTo}) => {\n    const { ready, value, suggestions: { status, data }, setValue, clearSuggestions } = usePlacesAutocomplete();\n    const handleChosenSuggestion = async suggestion => {\n        setValue(address, false)\n        clearSuggestions()\n        try {\n            const results = await getGeocode( { address } )\n            const {lat, lng} = await getLatLng(results[0])\n            panTo({lat, lng})\n        } catch (error) {\n            console.log(\"error\")\n        }\n    }\n    const suggestions = () =>{\n        if (status === \"OK\"){\n            return data.map(each =>{\n                return (<div onClick={()=>handleChosenSuggestion(each.description)} className=\"suggestionsResultsContainer\">\n                    {each.description}\n                </div>)\n            })\n        }\n    }\n    const dispatch = useDispatch()\n    const categoriesList = categories.map(({name, iconClassNames})=>{\n        let isCategory = name === whichCategory\n        return (\n            <li className={`${isCategory?'clickedCategory':'notClickedCategory'}`}key={name} onClick={()=>{searchCategoriesNearby(name)}}><i className={`${iconClassNames}`}></i>{name}</li>\n        )\n    })\n\n    return (\n        <div className=\"searchSideBar\">\n        <div className=\"returnButton\"><i  onClick={()=>{dispatch(setWhichDashboardPageToDashboard())}} className=\"fas fa-3x fa-arrow-circle-left\"></i></div>\n        <form>\n            <input onChange={(e)=>setValue(e.target.value)}className=\"searchInput\" type=\"input\" placeholder=\"Search a city\"></input>\n            {suggestions()}\n        </form>\n        <ul className=\"categoriesContainer\">\n            {categoriesList}\n        </ul>\n        <p className=\"clickInformational\"><i className=\"fas fa-info-circle\"></i>Click on an area or an apartment to ask questions to residents</p>\n      </div>\n    )\n}\n\nexport default SearchSidebar"]},"metadata":{},"sourceType":"module"}