{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/ChosenMarker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../CSS/ChosenMarker.css\";\n\nconst ChosenMarker = ({\n  map,\n  data,\n  setChosenMarker\n}) => {\n  _s();\n\n  const [info, setInfo] = useState(null);\n  useEffect(() => {\n    const placesService = new window.google.maps.places.PlacesService(map);\n    placesService.getDetails({\n      placeId: data.place_id\n    }, (results, status) => {\n      if (status === \"OK\") {\n        console.log(\"results are\", results);\n        setInfo(results);\n      } else {\n        alert(\"error getting details of place clicked\");\n      }\n    });\n  }, [map]);\n  console.log(\"info is \", info);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chosenMarkerContainer\",\n    onClick: () => setChosenMarker(null),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chosenMarkerPopUp\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: info.photos && info.photos ? info.photos[0].getUrl() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: data.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChosenMarker, \"eGVoHZlUrWhNDRFn2ZPb/gOb4HQ=\");\n\n_c = ChosenMarker;\nexport default ChosenMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenMarker\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/ChosenMarker.js"],"names":["React","useEffect","useState","ChosenMarker","map","data","setChosenMarker","info","setInfo","placesService","window","google","maps","places","PlacesService","getDetails","placeId","place_id","results","status","console","log","alert","e","stopPropagation","photos","getUrl","name","address"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,+BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAAkC;AAAA;;AACnD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMQ,aAAa,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,aAA9B,CAA4CV,GAA5C,CAAtB;AACAK,IAAAA,aAAa,CAACM,UAAd,CAAyB;AACrBC,MAAAA,OAAO,EAAEX,IAAI,CAACY;AADO,KAAzB,EAEG,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClB,UAAIA,MAAM,KAAG,IAAb,EAAkB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,OAA3B;AACAV,QAAAA,OAAO,CAACU,OAAD,CAAP;AACH,OAHD,MAGM;AACFI,QAAAA,KAAK,CAAC,wCAAD,CAAL;AACH;AACJ,KATD;AAUH,GAZQ,EAYN,CAAClB,GAAD,CAZM,CAAT;AAcAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,IAAxB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,OAAO,EAAE,MAAID,eAAe,CAAC,IAAD,CAAnE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAGiB,CAAD,IAAKA,CAAC,CAACC,eAAF,EAAjD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEjB,IAAI,CAACkB,MAAL,IAAelB,IAAI,CAACkB,MAApB,GAA2BlB,IAAI,CAACkB,MAAL,CAAY,CAAZ,EAAeC,MAAf,EAA3B,GAAmD;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKrB,IAAI,CAACsB;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKtB,IAAI,CAACuB;AAAV;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3BD;;GAAMzB,Y;;KAAAA,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport \"../../../CSS/ChosenMarker.css\"\n\nconst ChosenMarker = ({map, data, setChosenMarker}) => {\n    const [info, setInfo] = useState(null)\n\n    useEffect(()=>{\n        const placesService = new window.google.maps.places.PlacesService(map);\n        placesService.getDetails({\n            placeId: data.place_id\n        }, (results, status)=>{\n            if (status===\"OK\"){\n                console.log(\"results are\", results)\n                setInfo(results)\n            } else{\n                alert(\"error getting details of place clicked\")\n            }\n        })\n    }, [map])\n\n    console.log(\"info is \", info)\n    return (\n        <div className=\"chosenMarkerContainer\" onClick={()=>setChosenMarker(null)}>\n            <div className=\"chosenMarkerPopUp\" onClick={(e)=>e.stopPropagation()}>\n                <img src={info.photos && info.photos?info.photos[0].getUrl():null}></img>\n                <h2>{data.name}</h2>\n                <h4>{data.address}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default ChosenMarker"]},"metadata":{},"sourceType":"module"}