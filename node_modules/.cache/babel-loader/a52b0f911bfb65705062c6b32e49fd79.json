{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { setWhichDashboardPageToDashboard } from \"../../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport \"../../../CSS/SearchSidebar.css\";\nimport categories from \"../../../categories\";\nimport Search from \"./Search\";\n\nconst SearchSidebar = ({\n  whichCategory,\n  searchCategoriesNearby,\n  panTo\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const categoriesList = categories.map(({\n    name,\n    iconClassNames\n  }) => {\n    let isCategory = name === whichCategory;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `${isCategory ? 'clickedCategory' : 'notClickedCategory'}`,\n      onClick: () => {\n        searchCategoriesNearby(name);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: `${iconClassNames}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 139\n      }, this), name]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchSideBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"returnButton\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          dispatch(setWhichDashboardPageToDashboard());\n        },\n        className: \"fas fa-3x fa-arrow-circle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      panTo: panTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categoriesContainer\",\n      children: categoriesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"clickInformational\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 43\n      }, this), \"Click on an area or an apartment to ask questions to residents\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchSidebar, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchSidebar;\nexport default SearchSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSidebar\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/SearchSidebar.js"],"names":["React","setWhichDashboardPageToDashboard","useDispatch","categories","Search","SearchSidebar","whichCategory","searchCategoriesNearby","panTo","dispatch","categoriesList","map","name","iconClassNames","isCategory"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gCAAR,QAA+C,kBAA/C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAO,gCAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,sBAAhB;AAAwCC,EAAAA;AAAxC,CAAD,KAAoD;AAAA;;AAEtE,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,cAAc,GAAGP,UAAU,CAACQ,GAAX,CAAe,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,KAA0B;AAC5D,QAAIC,UAAU,GAAGF,IAAI,KAAKN,aAA1B;AACA,wBACI;AAAI,MAAA,SAAS,EAAG,GAAEQ,UAAU,GAAC,iBAAD,GAAmB,oBAAqB,EAApE;AAAiF,MAAA,OAAO,EAAE,MAAI;AAACP,QAAAA,sBAAsB,CAACK,IAAD,CAAtB;AAA6B,OAA5H;AAAA,8BAA8H;AAAG,QAAA,SAAS,EAAG,GAAEC,cAAe;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA9H,EAAsKD,IAAtK;AAAA,OAA2EA,IAA3E;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GALsB,CAAvB;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BAA8B;AAAI,QAAA,OAAO,EAAE,MAAI;AAACH,UAAAA,QAAQ,CAACR,gCAAgC,EAAjC,CAAR;AAA6C,SAA/D;AAAiE,QAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEO;AAAf;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAHA,eAMA;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA,8BAAkC;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBD;;GAAML,a;UAEeH,W;;;KAFfG,a;AAsBN,eAAeA,aAAf","sourcesContent":["import React from \"react\"\nimport {setWhichDashboardPageToDashboard} from \"../../../actions\"\nimport {useDispatch} from \"react-redux\"\nimport \"../../../CSS/SearchSidebar.css\"\nimport categories from \"../../../categories\"\nimport Search from \"./Search\"\n\nconst SearchSidebar = ({whichCategory, searchCategoriesNearby, panTo}) => {\n\n    const dispatch = useDispatch()\n    const categoriesList = categories.map(({name, iconClassNames})=>{\n        let isCategory = name === whichCategory\n        return (\n            <li className={`${isCategory?'clickedCategory':'notClickedCategory'}`}key={name} onClick={()=>{searchCategoriesNearby(name)}}><i className={`${iconClassNames}`}></i>{name}</li>\n        )\n    })\n\n    return (\n        <div className=\"searchSideBar\">\n        <div className=\"returnButton\"><i  onClick={()=>{dispatch(setWhichDashboardPageToDashboard())}} className=\"fas fa-3x fa-arrow-circle-left\"></i></div>\n        <Search panTo={panTo}/>\n        <ul className=\"categoriesContainer\">\n            {categoriesList}\n        </ul>\n        <p className=\"clickInformational\"><i className=\"fas fa-info-circle\"></i>Click on an area or an apartment to ask questions to residents</p>\n      </div>\n    )\n}\n\nexport default SearchSidebar"]},"metadata":{},"sourceType":"module"}