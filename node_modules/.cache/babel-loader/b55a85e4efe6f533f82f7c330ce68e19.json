{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/ChosenMarker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport \"../../../CSS/ChosenMarker.css\";\n\nconst ChosenMarker = ({\n  map,\n  data,\n  setChosenMarker\n}) => {\n  _s();\n\n  useEffect(() => {\n    const placesService = new window.google.maps.places.PlacesService(map);\n    placesService.getDetails({\n      placeId: event.placeId\n    }, (results, status) => {\n      if (status === \"OK\") {\n        const parkNameArray = results.name.toLowerCase().split(' ');\n\n        if (parkNameArray.includes(\"park\") || results.types.includes(\"park\")) {\n          const parkObject = {\n            name: results.name,\n            lat: event.latLng.lat(),\n            lng: event.latLng.lng(),\n            photo: results.photos[0].getUrl(),\n            website: results.website,\n            types: results.types\n          };\n          dispatch({\n            type: \"SET_MAP_CONFIRMATION_TRUE\"\n          });\n          dispatch(setSelectedPark(parkObject));\n        } else {\n          alert(\"This is not a park, please choose a park\");\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chosenMarkerContainer\",\n    onClick: () => setChosenMarker(null),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chosenMarkerPopUp\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: data.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChosenMarker, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ChosenMarker;\nexport default ChosenMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenMarker\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseAreaSub/ChosenMarker.js"],"names":["React","useEffect","ChosenMarker","map","data","setChosenMarker","placesService","window","google","maps","places","PlacesService","getDetails","placeId","event","results","status","parkNameArray","name","toLowerCase","split","includes","types","parkObject","lat","latLng","lng","photo","photos","getUrl","website","dispatch","type","setSelectedPark","alert","e","stopPropagation","icon","address"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,+BAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,GAAD;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAAkC;AAAA;;AAGnDJ,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMK,aAAa,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,aAA9B,CAA4CR,GAA5C,CAAtB;AACAG,IAAAA,aAAa,CAACM,UAAd,CAAyB;AACrBC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AADM,KAAzB,EAEG,CAACE,OAAD,EAAUC,MAAV,KAAqB;AACpB,UAAIA,MAAM,KAAK,IAAf,EAAoB;AAChB,cAAMC,aAAa,GAAGF,OAAO,CAACG,IAAR,CAAaC,WAAb,GAA2BC,KAA3B,CAAiC,GAAjC,CAAtB;;AACA,YAAIH,aAAa,CAACI,QAAd,CAAuB,MAAvB,KAAkCN,OAAO,CAACO,KAAR,CAAcD,QAAd,CAAuB,MAAvB,CAAtC,EAAsE;AACtE,gBAAME,UAAU,GAAG;AACnBL,YAAAA,IAAI,EAAEH,OAAO,CAACG,IADK;AAEnBM,YAAAA,GAAG,EAAEV,KAAK,CAACW,MAAN,CAAaD,GAAb,EAFc;AAGnBE,YAAAA,GAAG,EAAEZ,KAAK,CAACW,MAAN,CAAaC,GAAb,EAHc;AAInBC,YAAAA,KAAK,EAAEZ,OAAO,CAACa,MAAR,CAAe,CAAf,EAAkBC,MAAlB,EAJY;AAKnBC,YAAAA,OAAO,EAAEf,OAAO,CAACe,OALE;AAMnBR,YAAAA,KAAK,EAAEP,OAAO,CAACO;AANI,WAAnB;AASAS,UAAAA,QAAQ,CAAC;AAACC,YAAAA,IAAI,EAAE;AAAP,WAAD,CAAR;AACAD,UAAAA,QAAQ,CAACE,eAAe,CAACV,UAAD,CAAhB,CAAR;AACC,SAZD,MAYO;AACPW,UAAAA,KAAK,CAAC,0CAAD,CAAL;AACC;AAEJ;AACJ,KAtBD;AAuBH,GAzBQ,EAyBN,EAzBM,CAAT;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,OAAO,EAAE,MAAI7B,eAAe,CAAC,IAAD,CAAnE;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,OAAO,EAAG8B,CAAD,IAAKA,CAAC,CAACC,eAAF,EAAjD;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEhC,IAAI,CAACiC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKjC,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKd,IAAI,CAACkC;AAAV;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxCD;;GAAMpC,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport \"../../../CSS/ChosenMarker.css\"\n\nconst ChosenMarker = ({map, data, setChosenMarker}) => {\n\n\n    useEffect(()=>{\n        const placesService = new window.google.maps.places.PlacesService(map);\n        placesService.getDetails({\n            placeId: event.placeId\n        }, (results, status) => {\n            if (status === \"OK\"){\n                const parkNameArray = results.name.toLowerCase().split(' ')\n                if (parkNameArray.includes(\"park\") || results.types.includes(\"park\")) {\n                const parkObject = {\n                name: results.name,\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng(),\n                photo: results.photos[0].getUrl(),\n                website: results.website,\n                types: results.types\n                }\n    \n                dispatch({type: \"SET_MAP_CONFIRMATION_TRUE\"})\n                dispatch(setSelectedPark(parkObject))\n                } else {\n                alert(\"This is not a park, please choose a park\")\n                }\n    \n            }\n        });\n    }, [])\n\n\n    return (\n        <div className=\"chosenMarkerContainer\" onClick={()=>setChosenMarker(null)}>\n            <div className=\"chosenMarkerPopUp\" onClick={(e)=>e.stopPropagation()}>\n                <img src={data.icon}></img>\n                <h2>{data.name}</h2>\n                <h4>{data.address}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default ChosenMarker"]},"metadata":{},"sourceType":"module"}