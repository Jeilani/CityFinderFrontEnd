{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useCallback}from'react';import{GoogleMap,useLoadScript,Marker}from'@react-google-maps/api';import\"../../CSS/BrowseArea.css\";import SearchSidebar from\"./BrowseAreaSub/SearchSidebar.js\";import mapStyles from\"../../mapStyles\";import{determineWhichIcon,convertLng}from\"../../helperfunctions\";import ChosenMarker from\"./BrowseAreaSub/ChosenMarker.js\";import LoadingScreen from\"./BrowseAreaSub/LoadingScreen.js\";import WarningMessage from\"../WarningMessage\";var containerStyle={left:'30vw',width:'70vw',height:'100vh'};var options={styles:mapStyles,disableDefaultUI:true};var places=['places'];var BrowseArea=function BrowseArea(_ref){var setWhichDashboardPage=_ref.setWhichDashboardPage;var _useState=useState(\"All\"),_useState2=_slicedToArray(_useState,2),whichCategory=_useState2[0],setWhichCategory=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),mapResults=_useState4[0],setMapResults=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),chosenMarker=_useState6[0],setChosenMarker=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoading=_useState8[0],setIsLoading=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showFailedResults=_useState10[0],setShowFailedResults=_useState10[1];var _useLoadScript=useLoadScript({googleMapsApiKey:process.env.REACT_APP_GOOGLE_KEY,libraries:places}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;var panTo=React.useCallback(function(_ref2){var lat=_ref2.lat,lng=_ref2.lng;mapRef.current.panTo({lat:lat,lng:lng});mapRef.current.setZoom(16);},[]);var mapRef=useRef();var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),map=_useState12[0],setMap=_useState12[1];var onLoad=useCallback(function callback(map){navigator.geolocation.getCurrentPosition(function(position){mapRef.current=map;var bounds=new window.google.maps.LatLngBounds();map.fitBounds(bounds);map.panTo({lat:position.coords.latitude,lng:position.coords.longitude});map.setZoom(14);setMap(map);},function(err){alert(err);});},[]);var onUnmount=useCallback(function callback(map){setMap(null);},[]);var relocate=function relocate(){navigator.geolocation.getCurrentPosition(function(position){map.panTo({lat:position.coords.latitude,lng:position.coords.longitude});map.setZoom(14);setMap(map);},function(err){alert(err);});};var callMarkers=function callMarkers(){var icon=determineWhichIcon(whichCategory);if(mapResults){return mapResults.map(function(eachLocation){return/*#__PURE__*/_jsx(Marker,{position:{lat:eachLocation.geometry.location.lat(),lng:eachLocation.geometry.location.lng()},onClick:function onClick(){return setChosenMarker(eachLocation);},icon:{url:icon,scaledSize:new window.google.maps.Size(35,35),origin:new window.google.maps.Point(0,0),anchor:new window.google.maps.Point(15,15)}},eachLocation.place_id);});}};var searchCategoriesNearby=function searchCategoriesNearby(category){setIsLoading(true);var c=category.toLowerCase();var lat=map.getCenter().lat();var lng=convertLng(map.getCenter().lng());var location=new window.google.maps.LatLng(lat,lng);var request={location:location,radius:'1500',keyword:c};var service=new window.google.maps.places.PlacesService(map);service.nearbySearch(request,function(results,status){if(status===\"OK\"){setMapResults(results);setWhichCategory(category);setIsLoading(false);}else{setWhichCategory(category);setMapResults([]);setIsLoading(false);setIsLoading(false);renderFailedResult();}});};var renderFailedResult=function renderFailedResult(){setShowFailedResults(true);setTimeout(function(){return setShowFailedResults(false);},2000);};return isLoaded?/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:containerStyle,zoom:10,onLoad:onLoad,onUnmount:onUnmount,options:options,children:[showFailedResults?/*#__PURE__*/_jsx(WarningMessage,{message:\"No results for \".concat(whichCategory.toLowerCase(),\" in this area\")}):null,isLoading?/*#__PURE__*/_jsx(LoadingScreen,{}):null,chosenMarker?/*#__PURE__*/_jsx(ChosenMarker,{map:map,data:chosenMarker,setChosenMarker:setChosenMarker}):null,/*#__PURE__*/_jsx(SearchSidebar,{panTo:panTo,searchCategoriesNearby:searchCategoriesNearby,whichCategory:whichCategory}),/*#__PURE__*/_jsx(\"i\",{className:\"fas locate fa-location-arrow\",onClick:function onClick(){relocate();}}),isLoaded?callMarkers():null,/*#__PURE__*/_jsx(_Fragment,{})]}):/*#__PURE__*/_jsx(\"div\",{className:\"loadingScreen\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner\",children:loadError})});};export default/*#__PURE__*/React.memo(BrowseArea);","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseArea.js"],"names":["React","useState","useRef","useCallback","GoogleMap","useLoadScript","Marker","SearchSidebar","mapStyles","determineWhichIcon","convertLng","ChosenMarker","LoadingScreen","WarningMessage","containerStyle","left","width","height","options","styles","disableDefaultUI","places","BrowseArea","setWhichDashboardPage","whichCategory","setWhichCategory","mapResults","setMapResults","chosenMarker","setChosenMarker","isLoading","setIsLoading","showFailedResults","setShowFailedResults","googleMapsApiKey","process","env","REACT_APP_GOOGLE_KEY","libraries","isLoaded","loadError","panTo","lat","lng","mapRef","current","setZoom","map","setMap","onLoad","callback","navigator","geolocation","getCurrentPosition","position","bounds","window","google","maps","LatLngBounds","fitBounds","coords","latitude","longitude","err","alert","onUnmount","relocate","callMarkers","icon","eachLocation","geometry","location","url","scaledSize","Size","origin","Point","anchor","place_id","searchCategoriesNearby","category","c","toLowerCase","getCenter","LatLng","request","radius","keyword","service","PlacesService","nearbySearch","results","status","renderFailedResult","setTimeout","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport { GoogleMap, useLoadScript, Marker} from '@react-google-maps/api';\nimport \"../../CSS/BrowseArea.css\"\nimport SearchSidebar from \"./BrowseAreaSub/SearchSidebar.js\"\nimport mapStyles from \"../../mapStyles\"\nimport { determineWhichIcon, convertLng } from \"../../helperfunctions\"\nimport ChosenMarker from \"./BrowseAreaSub/ChosenMarker.js\"\nimport LoadingScreen from \"./BrowseAreaSub/LoadingScreen.js\"\nimport WarningMessage from \"../WarningMessage\"\n\nconst containerStyle = {\n    left: '30vw',\n  width: '70vw',\n  height: '100vh'\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true\n}\n\nconst places = ['places']\n\nconst BrowseArea = ({setWhichDashboardPage}) => {\n  const [whichCategory, setWhichCategory] = useState(\"All\")\n  const [mapResults, setMapResults] = useState([])\n  const [chosenMarker, setChosenMarker] = useState()\n  const [isLoading, setIsLoading] = useState(false)\n  const [showFailedResults, setShowFailedResults] = useState(false)\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_KEY,\n    libraries: places,\n  });\n\n  const panTo = React.useCallback(({lat, lng})=>{\n    mapRef.current.panTo({lat, lng})\n    mapRef.current.setZoom(16)\n  }, [])\n\n  const mapRef = useRef()\n  const [map, setMap] = useState(null)\n  const onLoad = useCallback(function callback(map) {\n    navigator.geolocation.getCurrentPosition(position=>{\n      mapRef.current = map;\n      const bounds = new window.google.maps.LatLngBounds();\n      map.fitBounds(bounds);\n      map.panTo(\n        {lat: position.coords.latitude,\n          lng: position.coords.longitude}\n        )\n        map.setZoom(14)\n        setMap(map)\n      }, (err)=>{alert(err)});\n    }, [])\n\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  const relocate = () => {\n    navigator.geolocation.getCurrentPosition(position=>{\n      map.panTo(\n        {lat: position.coords.latitude,\n          lng: position.coords.longitude}\n        )\n        map.setZoom(14)\n        setMap(map)\n    }, err=>{alert(err)})\n  }\n\n  const callMarkers = () => {\n    let icon = determineWhichIcon(whichCategory)\n    if (mapResults){\n      return mapResults.map(eachLocation => {\n        return (\n          <Marker key={eachLocation.place_id}\n          position = {{lat: eachLocation.geometry.location.lat(), lng: eachLocation.geometry.location.lng()}}\n          onClick={()=>setChosenMarker(eachLocation)}\n          icon = {{\n            url: icon,\n            scaledSize: new window.google.maps.Size(35, 35),\n            origin: new window.google.maps.Point(0,0),\n            anchor: new window.google.maps.Point(15, 15)\n        }}\n          />\n        )\n      })\n    }\n  }\n\n  const searchCategoriesNearby =  category => {\n    setIsLoading(true)\n    let c = category.toLowerCase()\n    let lat = map.getCenter().lat()\n    let lng = convertLng(map.getCenter().lng())\n    let location = new window.google.maps.LatLng(lat, lng);\n    let request = {\n      location: location,\n      radius: '1500',\n      keyword: c\n    }\n    const service = new window.google.maps.places.PlacesService(map);\n    service.nearbySearch(request, (results, status)=>{\n      if (status === \"OK\") {\n        setMapResults(results)\n        setWhichCategory(category)\n        setIsLoading(false)\n      }\n      else {\n        setWhichCategory(category)\n        setMapResults([])\n        setIsLoading(false)\n        setIsLoading(false)\n        renderFailedResult()\n      }\n    });\n  }\n\n  const renderFailedResult = () =>{\n    setShowFailedResults(true)\n    setTimeout(()=>setShowFailedResults(false), 2000)\n  }\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={options}\n      >\n        {showFailedResults?<WarningMessage message={`No results for ${whichCategory.toLowerCase()} in this area`}/>:null}\n        {isLoading?<LoadingScreen/>:null}\n        {chosenMarker?<ChosenMarker map={map} data={chosenMarker} setChosenMarker={setChosenMarker}/>:null}\n        <SearchSidebar panTo={panTo} searchCategoriesNearby={searchCategoriesNearby} whichCategory={whichCategory}/>\n        <i className=\"fas locate fa-location-arrow\" onClick = {()=>{relocate()}}></i>\n        { /* Child components, such as markers, info windows, etc. */ }\n        {isLoaded?callMarkers():null}\n        <></>\n      </GoogleMap>\n  ) : <div className=\"loadingScreen\"><i className=\"fas fa-spinner\">{loadError}</i></div>\n}\n\nexport default React.memo(BrowseArea)"]},"metadata":{},"sourceType":"module"}