{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseArea.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport \"../../CSS/BrowseArea.css\";\nimport SearchSidebar from \"./BrowseAreaFolder/SearhSidebar.js\";\nconst containerStyle = {\n  left: '30vw',\n  width: '70vw',\n  height: '100vh'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst BrowseArea = ({\n  setWhichDashboardPage\n}) => {\n  _s();\n\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyC2L0nnfFlL_0yZ95DZ4S2vL_nj0EKjghE\"\n  });\n  const mapRef = React.useRef();\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    navigator.geolocation.getCurrentPosition(position => {\n      alert(position.coords.latitude);\n      mapRef.current = map;\n      const bounds = new window.google.maps.LatLngBounds();\n      map.fitBounds(bounds);\n      map.panTo({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      map.setZoom(6);\n      setMap(map);\n    }, err => {\n      console.log(err);\n    });\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [/*#__PURE__*/_jsxDEV(SearchSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(BrowseArea, \"xVyV9yeAkktigWjfnlmsOSUg6JA=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = BrowseArea;\nexport default _c2 = /*#__PURE__*/React.memo(BrowseArea);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BrowseArea\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseArea.js"],"names":["React","GoogleMap","useJsApiLoader","SearchSidebar","containerStyle","left","width","height","center","lat","lng","BrowseArea","setWhichDashboardPage","isLoaded","id","googleMapsApiKey","mapRef","useRef","map","setMap","useState","onLoad","useCallback","callback","navigator","geolocation","getCurrentPosition","position","alert","coords","latitude","current","bounds","window","google","maps","LatLngBounds","fitBounds","panTo","longitude","setZoom","err","console","log","onUnmount","memo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,wBAA1C;AACA,OAAO,0BAAP;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,IAAI,EAAE,MADa;AAErBC,EAAAA,KAAK,EAAE,MAFc;AAGrBC,EAAAA,MAAM,EAAE;AAHa,CAAvB;AAMA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA6B;AAAA;;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAeX,cAAc,CAAC;AAClCY,IAAAA,EAAE,EAAE,mBAD8B;AAElCC,IAAAA,gBAAgB,EAAE;AAFgB,GAAD,CAAnC;AAIA,QAAMC,MAAM,GAAGhB,KAAK,CAACiB,MAAN,EAAf;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBnB,KAAK,CAACoB,QAAN,CAAe,IAAf,CAAtB;AAEA,QAAMC,MAAM,GAAGrB,KAAK,CAACsB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACtDM,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAE;AAC/CC,MAAAA,KAAK,CAACD,QAAQ,CAACE,MAAT,CAAgBC,QAAjB,CAAL;AACAd,MAAAA,MAAM,CAACe,OAAP,GAAiBb,GAAjB;AACA,YAAMc,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,YAAvB,EAAf;AACAlB,MAAAA,GAAG,CAACmB,SAAJ,CAAcL,MAAd;AACAd,MAAAA,GAAG,CAACoB,KAAJ,CACE;AAAC7B,QAAAA,GAAG,EAAEkB,QAAQ,CAACE,MAAT,CAAgBC,QAAtB;AACEpB,QAAAA,GAAG,EAAEiB,QAAQ,CAACE,MAAT,CAAgBU;AADvB,OADF;AAIErB,MAAAA,GAAG,CAACsB,OAAJ,CAAY,CAAZ;AACArB,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAXL,EAWQuB,GAAD,IAAO;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAAiB,KAXhC;AAYC,GAbY,EAaV,EAbU,CAAf;AAeA,QAAMG,SAAS,GAAG5C,KAAK,CAACsB,WAAN,CAAkB,SAASC,QAAT,CAAkBL,GAAlB,EAAuB;AACzDC,IAAAA,MAAM,CAAC,IAAD,CAAN;AACD,GAFiB,EAEf,EAFe,CAAlB;AAIA,SAAON,QAAQ,gBACX,QAAC,SAAD;AACE,IAAA,iBAAiB,EAAET,cADrB;AAEE,IAAA,MAAM,EAAEI,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,MAAM,EAAEa,MAJV;AAKE,IAAA,SAAS,EAAEuB,SALb;AAAA,4BAOE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,qCATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADW,gBAYX,qCAZJ;AAaD,CAxCD;;GAAMjC,U;UACiBT,c;;;KADjBS,U;AA0CN,kCAAeX,KAAK,CAAC6C,IAAN,CAAWlC,UAAX,CAAf","sourcesContent":["import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport \"../../CSS/BrowseArea.css\"\nimport SearchSidebar from \"./BrowseAreaFolder/SearhSidebar.js\"\n\nconst containerStyle = {\n    left: '30vw',\n  width: '70vw',\n  height: '100vh'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst BrowseArea = ({setWhichDashboardPage}) => {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyC2L0nnfFlL_0yZ95DZ4S2vL_nj0EKjghE\"\n  })\n  const mapRef = React.useRef()\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    navigator.geolocation.getCurrentPosition(position=>{\n        alert(position.coords.latitude)\n        mapRef.current = map;\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        map.panTo(\n          {lat: position.coords.latitude,\n            lng: position.coords.longitude}\n          )\n          map.setZoom(6)\n          setMap(map)\n        }, (err)=>{console.log(err)});\n    }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        <SearchSidebar/>\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(BrowseArea)"]},"metadata":{},"sourceType":"module"}