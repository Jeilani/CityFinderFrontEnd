{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/QuestionsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../../CSS/QuestionsPage.css\";\nimport NightLifeImage from \"../../images/HelpAUserImages/HelpAUserNightlife.jpg\";\nimport ParksImage from \"../../images/HelpAUserImages//HelpAUserBasketballCourt.jpg\";\nimport ApartmentImage from \"../../images/HelpAUserImages/HelpAUserApartment.jpg\";\nimport OutdoorsImage from \"../../images/HelpAUserImages/HelpAUserOutdoors.jpg\";\nimport TouristAttraction from \"../../images/HelpAUserImages/HelpAUserTajMahal.jpg\";\nimport { mockPendingQuestions } from \"../../DummyData\";\n\nconst QuestionsPage = ({\n  whichQuestionsPage,\n  setWhichHelpAUserPage\n}) => {\n  _s();\n\n  const [inQuestionBoxPopUp, setInQuestionBoxPopUp] = useState(false);\n\n  const renderInQuestionBoxPopUp = fullQuestion => {\n    if (inQuestionBoxPopUp) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individualQuestionPopUp\",\n      children: fullQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 40\n    }, this);else return null;\n  };\n\n  console.log(\"inQuestionBoxPopUp is \");\n  console.log(inQuestionBoxPopUp);\n  const questionsList = mockPendingQuestions.map(eachQuestion => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individualQuestion\",\n      onMouseEnter: () => setInQuestionBoxPopUp(true),\n      onMouseLeave: () => setInQuestionBoxPopUp(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [eachQuestion.firstName, \" \", eachQuestion.lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: eachQuestion.profileImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), renderInQuestionBoxPopUp(eachQuestion.title), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individualQuestionTitle\",\n        children: [eachQuestion.title.substring(0, 60), \" ...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n  let backgroundPic;\n\n  switch (whichQuestionsPage) {\n    case \"Apartment\":\n      backgroundPic = ApartmentImage;\n      break;\n\n    case \"NightLife\":\n      backgroundPic = NightLifeImage;\n      break;\n\n    case \"Tourist Attractions\":\n      backgroundPic = TouristAttraction;\n      break;\n\n    case \"Outdoors\":\n      backgroundPic = OutdoorsImage;\n      break;\n\n    case \"Parks\":\n      backgroundPic = ParksImage;\n      break;\n\n    default:\n      backgroundPic = ApartmentImage;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionsPageContainer\",\n    style: {\n      background: `linear-gradient(rgba(0, 0, 0, .7), rgba(0, 0, 0, .1)), url(${backgroundPic}`,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionsPageHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Here are all the questions about \", whichQuestionsPage.toLowerCase(), \" in your area\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Click on one's that interest you to start a conversation and make a friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individualQuestionsContainer\",\n      children: questionsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"returnButton returnButtonQuestionsPage\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => {\n          setWhichHelpAUserPage(\"Regular\");\n        },\n        className: \"fas fa-3x fa-arrow-circle-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 69\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionsPage, \"Tg/FsC530TpQ42pG7RNXnatzrZE=\");\n\n_c = QuestionsPage;\nexport default QuestionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionsPage\");","map":{"version":3,"sources":["/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/QuestionsPage.js"],"names":["React","useState","NightLifeImage","ParksImage","ApartmentImage","OutdoorsImage","TouristAttraction","mockPendingQuestions","QuestionsPage","whichQuestionsPage","setWhichHelpAUserPage","inQuestionBoxPopUp","setInQuestionBoxPopUp","renderInQuestionBoxPopUp","fullQuestion","console","log","questionsList","map","eachQuestion","firstName","lastName","profileImg","title","substring","backgroundPic","background","backgroundSize","backgroundRepeat","toLowerCase"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport \"../../CSS/QuestionsPage.css\"\nimport NightLifeImage from \"../../images/HelpAUserImages/HelpAUserNightlife.jpg\"\nimport ParksImage from \"../../images/HelpAUserImages//HelpAUserBasketballCourt.jpg\"\nimport ApartmentImage from \"../../images/HelpAUserImages/HelpAUserApartment.jpg\"\nimport OutdoorsImage from \"../../images/HelpAUserImages/HelpAUserOutdoors.jpg\"\nimport TouristAttraction from \"../../images/HelpAUserImages/HelpAUserTajMahal.jpg\"\nimport {mockPendingQuestions} from \"../../DummyData\"\n\nconst QuestionsPage = ({whichQuestionsPage, setWhichHelpAUserPage}) => {\n    const [inQuestionBoxPopUp, setInQuestionBoxPopUp] = useState(false)\n\n    const renderInQuestionBoxPopUp = fullQuestion => {\n        if (inQuestionBoxPopUp) return <div className=\"individualQuestionPopUp\">{fullQuestion}</div>\n        else return null\n    }\n\n    console.log(\"inQuestionBoxPopUp is \")\n    console.log(inQuestionBoxPopUp)\n\n    const questionsList = mockPendingQuestions.map(eachQuestion => {\n        return (\n            <div className=\"individualQuestion\" onMouseEnter={()=>setInQuestionBoxPopUp(true)} onMouseLeave={()=>setInQuestionBoxPopUp(false)}>\n                <div>{eachQuestion.firstName} {eachQuestion.lastName}</div>\n                <img src={eachQuestion.profileImg}/>\n                {renderInQuestionBoxPopUp(eachQuestion.title)}\n                <div className=\"individualQuestionTitle\">{eachQuestion.title.substring(0, 60)} ...</div>\n            </div>\n        )\n    })\n    let backgroundPic;\n\n    switch(whichQuestionsPage){\n        case \"Apartment\":\n            backgroundPic = ApartmentImage\n            break;\n        case \"NightLife\":\n            backgroundPic = NightLifeImage\n            break;\n        case \"Tourist Attractions\":\n            backgroundPic = TouristAttraction\n            break;\n        case \"Outdoors\":\n            backgroundPic = OutdoorsImage\n            break;\n        case \"Parks\":\n            backgroundPic = ParksImage\n            break;\n        default: backgroundPic = ApartmentImage\n    }\n\n    return (\n        <div className=\"questionsPageContainer\" style={{background: `linear-gradient(rgba(0, 0, 0, .7), rgba(0, 0, 0, .1)), url(${backgroundPic}`, backgroundSize: \"cover\", backgroundRepeat: \"no-repeat\"}}>\n            <div className=\"questionsPageHeader\">\n                <h1>Here are all the questions about {whichQuestionsPage.toLowerCase()} in your area</h1>\n                <h3>Click on one's that interest you to start a conversation and make a friend</h3>\n            </div>\n            <div className=\"individualQuestionsContainer\">\n                {questionsList}\n            </div>\n            <div className=\"returnButton returnButtonQuestionsPage\"><i onClick={()=>{setWhichHelpAUserPage(\"Regular\")}} className=\"fas fa-3x fa-arrow-circle-left\"></i></div>\n        </div>\n    )\n}\n\nexport default QuestionsPage"]},"metadata":{},"sourceType":"module"}